[{"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\index.js":"1","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\App.js":"2","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\store.js":"3","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Header.js":"4","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Footer.js":"5","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\campgroundReducer.js":"7","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\campgroundActions.js":"8","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\campgroundConstants.js":"9","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Place.js":"10","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\PlaceDetailScreen.js":"11","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Message.js":"12","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Loader.js":"13","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\AddNewCampground.js":"14","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\FormContainer.js":"15","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\EditCampgroundDetails.js":"16","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignUpScreen.js":"17","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignInScreen.js":"18","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\userReducer.js":"19","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\userConstants.js":"20","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\userActions.js":"21","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\appReducer.js":"22","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\appConstants.js":"23","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\PopUp.js":"24","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Map.js":"25","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\LandingScreen.js":"26","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Comment.js":"27","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\AddReview.js":"28","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\ProfileScreen.js":"29","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Paginate.js":"30"},{"size":361,"mtime":1609597714772,"results":"31","hashOfConfig":"32"},{"size":3956,"mtime":1612361354465,"results":"33","hashOfConfig":"32"},{"size":1288,"mtime":1612355946860,"results":"34","hashOfConfig":"32"},{"size":2575,"mtime":1611260273799,"results":"35","hashOfConfig":"32"},{"size":817,"mtime":1611772707836,"results":"36","hashOfConfig":"32"},{"size":2092,"mtime":1611824264899,"results":"37","hashOfConfig":"32"},{"size":5785,"mtime":1612355923261,"results":"38","hashOfConfig":"32"},{"size":6145,"mtime":1612362438028,"results":"39","hashOfConfig":"32"},{"size":1506,"mtime":1612355683075,"results":"40","hashOfConfig":"32"},{"size":953,"mtime":1611088729354,"results":"41","hashOfConfig":"32"},{"size":8886,"mtime":1613661709569,"results":"42","hashOfConfig":"32"},{"size":248,"mtime":1609662790610,"results":"43","hashOfConfig":"32"},{"size":403,"mtime":1609662583429,"results":"44","hashOfConfig":"32"},{"size":8552,"mtime":1611476201843,"results":"45","hashOfConfig":"32"},{"size":345,"mtime":1609695587169,"results":"46","hashOfConfig":"32"},{"size":11386,"mtime":1611130049912,"results":"47","hashOfConfig":"32"},{"size":5731,"mtime":1611466212394,"results":"48","hashOfConfig":"32"},{"size":4789,"mtime":1611466178941,"results":"49","hashOfConfig":"32"},{"size":3673,"mtime":1611476804502,"results":"50","hashOfConfig":"32"},{"size":966,"mtime":1611476409487,"results":"51","hashOfConfig":"32"},{"size":3931,"mtime":1611476571704,"results":"52","hashOfConfig":"32"},{"size":2607,"mtime":1611259096519,"results":"53","hashOfConfig":"32"},{"size":900,"mtime":1611259062196,"results":"54","hashOfConfig":"32"},{"size":500,"mtime":1611034930062,"results":"55","hashOfConfig":"32"},{"size":1348,"mtime":1612007028244,"results":"56","hashOfConfig":"32"},{"size":2970,"mtime":1611466405745,"results":"57","hashOfConfig":"32"},{"size":6666,"mtime":1613662232427,"results":"58","hashOfConfig":"32"},{"size":4351,"mtime":1612361806595,"results":"59","hashOfConfig":"32"},{"size":1289,"mtime":1611502149795,"results":"60","hashOfConfig":"32"},{"size":614,"mtime":1611772111850,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"12cpiaz",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\index.js",[],["137","138"],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\App.js",["139"],"import React,{useEffect,useState} from 'react'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport { useDispatch,useSelector} from 'react-redux'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport PlaceDetailScreen from './screens/PlaceDetailScreen'\nimport AddNewCampground from './screens/AddNewCampground'\nimport EditCampgroundDetails from './screens/EditCampgroundDetails'\nimport SignUpScreen from './screens/SignUpScreen'\nimport SignInScreen from './screens/SignInScreen'\nimport {toast } from 'react-toastify';\nimport PopUp from './components/PopUp'\nimport LandingScreen from './screens/LandingScreen'\nimport ProfileScreen from './screens/ProfileScreen'\n\nimport {\n  USER_SIGNEDIN_RESET,\n  PLACE_LIST_ADDED_PLACE_REMOVE,\n  PLACE_DETAIL_EDITED_PLACE_REMOVE,\n  USER_SIGNEDUP_RESET,\n  USER_SIGNOUT_RESET,\n  USER_LOGIN_REQUIRED_RESET,\n  USER_NO_PERMISSION_RESET\n\n} from './constants/appConstants'\nimport {status} from './actions/userActions'\n\nfunction App() {\n  const [pathN,setPath] = useState()\n  const dispatch = useDispatch()\n  const appDetail = useSelector(state => state.appDetails)\n  const {\n    signInPopUp,\n    addedPlacePopup,\n    editedPlacePopup,\n    signUpPopUp,\n    signOutPopUp,\n    userLoginPopUp,\n    userNoPermission,\n    path\n  } = appDetail\n  \n  useEffect(() => {\n    console.log(\"THIS IS FROM APP.JS\");\n    dispatch(status())\n  },[dispatch])\n\n  useEffect(()=>{\n    setPath(window.location.pathname)\n  })\n\n  const popUpMsg = (displayText) => {\n    toast.success(displayText, {\n            position: \"top-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            }); \n      \n    \n  }\n\n  useEffect(() => {\n    if(signInPopUp){  \n            popUpMsg('Login Successfull')\n            dispatch({type:USER_SIGNEDIN_RESET})\n        }\n    if(addedPlacePopup){\n      popUpMsg('Added New Campground')\n      dispatch({type:PLACE_LIST_ADDED_PLACE_REMOVE })\n    }\n    if(editedPlacePopup){\n      popUpMsg('Edited campground')\n      dispatch({type: PLACE_DETAIL_EDITED_PLACE_REMOVE})\n    }\n    if(signUpPopUp){\n      popUpMsg('Successfully created an account')\n      dispatch({type: USER_SIGNEDUP_RESET})\n    }\n    if(signOutPopUp){\n      popUpMsg('Successfully logged out')\n      dispatch({type: USER_SIGNOUT_RESET})\n    }\n    if(userLoginPopUp){\n      popUpMsg('You need to Login to perform this action')\n      dispatch({type: USER_LOGIN_REQUIRED_RESET})\n    }\n    if(userNoPermission){\n      popUpMsg('You do not have permission to do this')\n      dispatch({type: USER_NO_PERMISSION_RESET})\n    }\n  },[signInPopUp,addedPlacePopup,editedPlacePopup,signUpPopUp,signOutPopUp,userLoginPopUp,userNoPermission,dispatch])\n\n  return (\n    <>\n    {path === '/' || pathN === '/' ?<Router><LandingScreen /></Router>  : (\n      <Router>\n      <Header />\n      <PopUp />\n      <main className = 'py-3'>\n        <Container>\n        <Switch>\n          <Route exact path='/newcampground' component={AddNewCampground}  />\n          <Route exact path='/campground/:id/edit' component={EditCampgroundDetails} />  \n          <Route exact path='/campground/:id' component={PlaceDetailScreen}  />  \n          <Route exact path='/signup' component={SignUpScreen} />\n          <Route exact path='/signin' component={SignInScreen} />\n          <Route exact path='/campgrounds' component={HomeScreen} />  \n          <Route exact path='/profile' component={ProfileScreen} />\n          <Route exact path='/landing' component={LandingScreen} />  \n          <Route exact path='/campgrounds/page/:pageNumber' component={HomeScreen} />\n        </Switch>    \n        </Container>  \n      </main>\n      <Footer />\n    </Router>\n    ) }\n    \n  </>\n  );\n}\n\nexport default App;","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\store.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Header.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Footer.js",["140"],"import React from 'react'\r\nimport {Container,Row,Col} from 'react-bootstrap'\r\n\r\n\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row className='d-flex flex-column'>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; TrekNTravel\r\n                    </Col>\r\n                    <Col className='text-center pb-3'>\r\n                        <a style={{textDecoration:'none'}} target=\"_blank\" href='https://github.com/Varun-Hegde'>\r\n                                Built with <i style={{color:\"red\"}} className=\"fas fa-heart\"></i> by Varun\r\n                        </a>\r\n                    </Col>\r\n                </Row>\r\n                \r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n ","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\campgroundReducer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\campgroundActions.js",["141"],"import {\r\n    PLACE_LIST_FAIL,\r\n    PLACE_LIST_REQUEST,\r\n    PLACE_LIST_SUCCESS,\r\n    PLACE_DETAIL_FAIL,\r\n    PLACE_DETAIL_REQUEST,\r\n    PLACE_DETAIL_SUCCESS,\r\n    PLACE_CREATE_FAIL,\r\n    PLACE_CREATE_REQUEST,\r\n    PLACE_CREATE_SUCCESS,\r\n    PLACE_EDIT_FAIL,\r\n    PLACE_EDIT_REQUEST,\r\n    PLACE_EDIT_SUCCESS,\r\n    PLACE_REVIEW_ADD_FAIL,\r\n    PLACE_REVIEW_ADD_REQUEST,\r\n    PLACE_REVIEW_ADD_SUCCESS,\r\n    PLACE_LIKE_FAIL,\r\n    PLACE_LIKE_REQUEST,\r\n    PLACE_LIKE_SUCCESS,\r\n    EDIT_REVIEW_FAIL,\r\n    EDIT_REVIEW_REQUEST,\r\n    EDIT_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS\r\n} from '../constants/campgroundConstants'\r\n\r\nimport {\r\n    PLACE_LIST_ADDED_PLACE,\r\n    PLACE_DETAIL_EDITED_PLACE\r\n} from '../constants/appConstants'\r\n\r\nimport axios from 'axios'\r\n\r\n//GET ALL PLACES\r\nexport const listPlaces = (pageNumber='') => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PLACE_LIST_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.get(`/api/campgrounds?pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PLACE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type: PLACE_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//GET A PARTICULAR PLACE DETAIL\r\nexport const placeDetails = (id) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type:PLACE_DETAIL_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.get(`/api/campgrounds/${id}`)\r\n        dispatch({\r\n            type: PLACE_DETAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type: PLACE_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//ADD NEW PLACE\r\nexport const addPlace = (campground) =>async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PLACE_CREATE_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' :'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post('/api/campgrounds/',campground,config)\r\n\r\n        dispatch({\r\n            type: PLACE_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: PLACE_LIST_ADDED_PLACE\r\n        })\r\n        \r\n    }catch(error){\r\n        dispatch({   \r\n            type:PLACE_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//EDIT PLACE\r\nexport const editPlace = (campground,id) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type:PLACE_EDIT_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' :'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.put(`/api/campgrounds/${id}`,campground,config)\r\n\r\n        dispatch({\r\n            type:PLACE_EDIT_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type:PLACE_DETAIL_EDITED_PLACE\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({   \r\n            type:PLACE_EDIT_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//ADD NEW REVIEW TO A PLACE\r\nexport const addReview = (body,rating,campId) =>async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PLACE_REVIEW_ADD_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' :'application/json'\r\n            }\r\n        }\r\n        const {data} = await axios.post(`/api/campgrounds/${campId}/reviews`,{body,rating},config)\r\n\r\n        dispatch({\r\n            type: PLACE_REVIEW_ADD_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n    }catch(error){\r\n        dispatch({   \r\n            type:PLACE_REVIEW_ADD_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//LIKE\r\nexport const likeAction = (id) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: PLACE_LIKE_REQUEST\r\n        })\r\n\r\n        const data = await axios.post(`/api/campgrounds/${id}/like`)\r\n\r\n        dispatch({\r\n            type: PLACE_LIKE_SUCCESS\r\n        })\r\n    }catch(error){\r\n        dispatch({   \r\n            type:PLACE_LIKE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n} \r\n\r\nexport const editReviewAction = (id,reviewId,review) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: EDIT_REVIEW_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers : {\r\n                'Content-Type' :'application/json'\r\n            }\r\n        }\r\n\r\n        const data = await axios.put(`/api/campgrounds/${id}/reviews/${reviewId}`,review,config)\r\n\r\n        dispatch({\r\n            type: EDIT_REVIEW_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({   \r\n            type:EDIT_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteReviewAction = (id,reviewId) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: DELETE_REVIEW_REQUEST\r\n        })\r\n\r\n        const data = await axios.delete(`/api/campgrounds/${id}/reviews/${reviewId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({   \r\n            type:DELETE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\campgroundConstants.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Place.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\PlaceDetailScreen.js",["142","143","144","145","146","147","148","149","150","151","152"],"import React,{useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {placeDetails,likeAction} from '../actions/campgroundActions'\r\nimport {Link} from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {Row,Col,Image,Carousel,CarouselItem,ListGroup, Accordion} from 'react-bootstrap'\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport Map from '../components/Map'\r\nimport Comment from '../components/Comment'\r\nimport AddReview from '../components/AddReview'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst PlaceDetailScreen = ({match}) => {\r\n    const campId = match.params.id\r\n   \r\n    const dispatch = useDispatch()\r\n  \r\n    const placeDetail = useSelector(state => state.placeDetail)\r\n    const {loading,place,error} = placeDetail \r\n    const [userLiked,setUserLiked] = useState(false)\r\n   \r\n    const deleteReview = useSelector(state => state.deleteReview)\r\n    const {success:successDeleteReview} = deleteReview\r\n\r\n    const [totalLikes,setTotalLikes] = useState(0)\r\n\r\n    const userStatus = useSelector(state => state.status)\r\n    const {isLoggedIn,userInfo} = userStatus\r\n   \r\n    const newReview = useSelector(state => state.newReview)\r\n    const {loading:loadingNewReview,error:errorNewReview,success:successNewReview} = newReview\r\n\r\n    const like = useSelector(state => state.like)\r\n    const {success:successLike} = like\r\n   \r\n    const [rating,setRating] = useState(0)\r\n    const [comment,setComment] = useState('')\r\n    \r\n\r\n    const ratingChanged = (newRating) => {\r\n        console.log(newRating);\r\n    };\r\n\r\n    const displayPic = (pic) => {\r\n      return pic.replace('/upload','/upload/w_550')\r\n    }\r\n\r\n    let showEdit = false\r\n    if(!isLoggedIn){\r\n        showEdit = false;\r\n    }else{\r\n        if(!loading && isLoggedIn){\r\n            {\r\n                if(userInfo.user._id === place.author._id)\r\n                    showEdit = true\r\n            }\r\n    }\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        setUserLiked(false)\r\n        dispatch(placeDetails(match.params.id))\r\n    },[successNewReview,match,dispatch,match.params.id,successDeleteReview])\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if(successNewReview){\r\n            setComment('')\r\n            setRating(0.5)\r\n        }\r\n        if(isLoggedIn && place && place.likes && place.likes.length>0){\r\n            \r\n            \r\n            for(let p of place.likes){\r\n                if(p === userInfo.user._id){\r\n                    setUserLiked(true)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        if(place && place.likes){\r\n            setTotalLikes(place.likes.length)\r\n        }\r\n    },[match,dispatch,match.params.id,place])   \r\n\r\n    const userReviewAdded = () => {\r\n       if(!isLoggedIn)\r\n       return false\r\n        for(let rev of place.reviews){\r\n           \r\n            \r\n            if(rev.author._id.toString() === userInfo.user._id.toString()){\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    \r\n    const likePlace = () => {\r\n        if(userLiked){\r\n            setTotalLikes(prev => prev-1)\r\n        }else{\r\n            setTotalLikes(prev => prev + 1)\r\n        }\r\n        dispatch(likeAction(match.params.id))\r\n        if(userLiked){\r\n            setUserLiked(false)\r\n        }else{\r\n            setUserLiked(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fade bottom>   \r\n        <div>\r\n            <Link className='btn btn-light my-3' to='/campgrounds'>\r\n                Go Back\r\n            </Link>\r\n            \r\n            {showEdit && <Link className='btn btn-light my-3' to={`/campground/${match.params.id}/edit`}>\r\n                Edit\r\n            </Link>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Fade bottom>\r\n                <Row>\r\n                    <Col md={7}>\r\n\r\n                        <Carousel className='px-3'>\r\n                            {place && place.image && place.image.length>=1 && place.image.map(pic => {\r\n                                return (\r\n                                    <Carousel.Item interval={3000}>\r\n                                        <Image  src={pic} width=\"800px\" rounded fluid/>\r\n                                    </Carousel.Item>\r\n                                )\r\n                            }\r\n                            )}\r\n                        </Carousel>\r\n                    </Col>\r\n                    <Col md={5}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>\r\n                                <h3>{place.title}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <ReactStars \r\n                                    size =  {25}\r\n                                    count = {5}\r\n                                    activeColor = \"gold\"\r\n                                    value = {place.rating}\r\n                                    a11y = {true}\r\n                                    isHalf = {true}\r\n                                    emptyIcon = {<i className=\"far fa-star\" />}\r\n                                    halfIcon = {<i className=\"fa fa-star-half-alt\" />}\r\n                                    filledIcon = {<i className=\"fa fa-star\" />}\r\n                                    onChange = {ratingChanged}\r\n                                    edit = {false}  //MAKES COMPONENT READ ONLY\r\n                                />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <b style={{fontSize: \"20px\", fontWeight:\"bold\"}}>Price:</b> {place.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <b style={{fontSize: \"20px\", fontWeight:\"bold\"}}>Description:</b> {place.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"d-flex justify-content-center\">\r\n                    <Col md={10} className=\"pt-5 px-3 d-flex justify-content-center\"  >\r\n                        {place && place.geometry && place.geometry.coordinates.length===2 && <Map campground={place} coOrd = {place.geometry.coordinates}/> }\r\n                    </Col>\r\n                </Row>\r\n                            \r\n                <Row className='pt-4'>\r\n                    {isLoggedIn ? (\r\n                        <Col className='likeHover' onClick={isLoggedIn && likePlace}>\r\n                            {userLiked ? (<h3 ><i style={{color:\"red\"}} class=\"fas fa-heart\"></i>  {totalLikes}</h3>): (<h3><i class=\"far fa-heart\"></i> {totalLikes}</h3>)}\r\n                        </Col>\r\n                    ) : (\r\n                        <Col>\r\n                            <h3><Link style={{textDecoration: \"none\"}} to={`/signin?redirect=/campground/${match.params.id}`}><i class=\"far fa-heart\"></i> {totalLikes}</Link></h3>\r\n                        </Col>\r\n                    )}\r\n                </Row>\r\n                <Row className=\"pt-4\">\r\n                    <Col>\r\n                        <h2>Reviews</h2> \r\n                        {!userReviewAdded() && <AddReview id={match.params.id}/>}\r\n                        {place.reviews && place.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                        <ListGroup variant=\"flush\">\r\n                            {place.reviews.length > 0 ? (\r\n                            <>\r\n                                {place.reviews.map(review => {\r\n                                    return (\r\n                                        <ListGroup.Item style={{maxWidth: \"380px\"}}>\r\n                                            {isLoggedIn && review.author._id === userInfo.user._id ? (\r\n                                                <Comment review={review} reviewAuthor={true}/>\r\n                                            ) : (\r\n                                                \r\n                                                <Comment review={review} reviewAuthor={false} id={match.params.id}/>\r\n                                            )}\r\n                                            \r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                })}\r\n                            </>\r\n                        ) : (null)}\r\n                       \r\n                        </ListGroup>\r\n                        \r\n                        \r\n                    </Col>\r\n                </Row>\r\n                </Fade>\r\n            )}\r\n            \r\n        </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default PlaceDetailScreen","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Message.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Loader.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\AddNewCampground.js",["153","154"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Form, FormGroup, Label, Input,FormFeedback,FormText} from 'reactstrap';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport {addPlace} from '../actions/campgroundActions'\r\nimport {PLACE_CREATE_RESET} from '../constants/campgroundConstants'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {USER_LOGIN_REQUIRED} from '../constants/appConstants'\r\nimport axios from 'axios';\r\n\r\n\r\nconst AddNewCampground = ({history}) => {\r\n    const [title,setTitle] = useState('')\r\n    const [price,setPrice] = useState();\r\n    const [description,setDescription] = useState('')\r\n    const [location,setLocation] = useState('')\r\n    const [image,setImage] = useState([])\r\n    const [uploading,setUploading] = useState(false)\r\n    const [uploadedImages,setUploadedImages] = useState('')\r\n    const [uploadErr,setUploadErr] = useState(false)\r\n\r\n    const [touchedTitle,setTouchedTitle] = useState(false)\r\n    const [touchedPrice,setTouchedPrice] = useState(false);\r\n    const [touchedDescription,setTouchedDescription] = useState(false)\r\n    const [touchedLocation,setTouchedLocation] = useState(false)\r\n    const [touchedImage,setTouchedImage] = useState(false)\r\n    const [touchedUpload,setTouchedUpload] = useState(false)\r\n\r\n    const placeAdd = useSelector(state => state.placeAdd)\r\n    const {loading: loadingAdd,error: errorAdd, success: successAdd} = placeAdd\r\n    const dispatch = useDispatch()\r\n\r\n    const statusState = useSelector(state => state.status)\r\n    const {userInfo: userStatus,isLoggedIn} = statusState\r\n\r\n    useEffect(() => {\r\n        if(!isLoggedIn){\r\n            dispatch({type:USER_LOGIN_REQUIRED})\r\n            history.push('/signin?redirect=newcampground')\r\n        }\r\n\r\n        if(successAdd){\r\n            dispatch({type:PLACE_CREATE_RESET})\r\n            history.push('/campgrounds')\r\n        }\r\n    },[dispatch,successAdd,history,userStatus,isLoggedIn])\r\n\r\n   \r\n   function validate() {\r\n        const errors = {\r\n            title: '',\r\n            price: '',\r\n            location: '',\r\n            image: '',\r\n            desc: ''\r\n        };\r\n\r\n        if (touchedTitle && title.length < 3)\r\n            errors.title = 'Title should be >= 3 characters';\r\n        \r\n        const reg = /^\\d+$/;\r\n        if (touchedPrice && !reg.test(price))\r\n            errors.price = 'Price should contain only numbers';\r\n        if(touchedPrice && price<0)\r\n            errors.price = 'Price should be greater than zero';\r\n        \r\n        if(touchedLocation && location.length<3){\r\n            errors.location = 'Location should be >= 3 characters'\r\n        }\r\n\r\n        \r\n        \r\n        if(touchedImage && image.length<1){\r\n            errors.image = 'Image Invalid'\r\n        }\r\n\r\n        if(touchedDescription && description.length<=0)\r\n            errors.desc = 'No Description'\r\n\r\n        return errors;\r\n    }\r\n\r\n    const onFileChange = (e) => {\r\n        setUploadedImages(e.target.files)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n       e.preventDefault()\r\n        var formData = new FormData();\r\n        for (const key of Object.keys(uploadedImages)) {\r\n            formData.append('image',uploadedImages[key])\r\n        }\r\n        setUploading(true)\r\n        let newImageData\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type' : 'multipart/form-data'\r\n                }\r\n            }\r\n            var {data} = await axios.post('/api/upload',formData,config)\r\n            newImageData = data.filePath\r\n            setImage(newImageData)\r\n            setUploading(false)\r\n            const campgroundDetails = {\r\n                title,\r\n                price,\r\n                description,\r\n                location,\r\n                image:newImageData\r\n            }\r\n            dispatch(addPlace(campgroundDetails))\r\n        }catch(err){\r\n            setUploading(false)\r\n            setUploadErr(true);\r\n            setTouchedUpload(false)\r\n        }\r\n   }\r\n    \r\n    const errors = validate(title);\r\n    return (\r\n        <Zoom bottom>\r\n            <Link to='/campgrounds' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>New Campground</h1>\r\n            {errorAdd && <Message variant='danger'>{errorAdd}</Message>}\r\n            {uploadErr ? <Message variant='danger'>File must be in jpg or jpeg or png format</Message> : null}\r\n            <Form onSubmit={submitHandler} enctype=\"multipart/form-data\">\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\"\r\n                            placeholder=\"Campground title\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)} \r\n                            onBlur = {() => setTouchedTitle(true)}\r\n                            valid={ errors.title==='' && title.length>=3}\r\n                            invalid={errors.title !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.title}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"price\">Price</Label>\r\n                        <Input type=\"text\" id=\"price\" name=\"price\"\r\n                            placeholder=\"Campground price\"\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)} \r\n                            onBlur = {() => setTouchedPrice(true)}\r\n                            valid={errors.price === '' && parseInt(price)}\r\n                            invalid={errors.price !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.price}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"location\">Location</Label>\r\n                        <Input type=\"text\" id=\"location\" name=\"location\"\r\n                            placeholder=\"Campground location\"\r\n                            value={location}\r\n                            onChange={(e) => setLocation(e.target.value)} \r\n                            onBlur = {() => setTouchedLocation(true)}\r\n                            valid={errors.location === '' && location.length>=3}\r\n                            invalid={errors.location !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.location}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                \r\n                <FormGroup>\r\n                    <Label for=\"exampleFile\">File</Label>\r\n                    <Input type=\"file\" name=\"file\" id=\"exampleFile\" multiple={true} onChange={onFileChange} />\r\n                    <FormText color=\"muted\">\r\n                    Upload images of campground\r\n                    </FormText>\r\n                    \r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='desc' id='desc'>Description</Label>\r\n                    <Input \r\n                        type='textarea' \r\n                        name='desc' \r\n                        id='desc' \r\n                        placeholder=\"Campground description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        onBlur = {() => setTouchedDescription(true)}\r\n                        valid={errors.desc === '' && description}\r\n                        invalid={errors.desc !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.desc}</FormFeedback>\r\n                </FormGroup>    \r\n                {uploading && <Loader />}\r\n                {loadingAdd ? <Loader /> : null}\r\n                <Button  \r\n                    block \r\n                    type=\"submit\" \r\n                    color=\"primary\"\r\n                     disabled = {errors.title || errors.price || errors.location\r\n                        || errors.desc || !title || !uploadedImages || !price || !location || !description} \r\n                >\r\n                    Add new campground\r\n                </Button>\r\n            </Form>\r\n\r\n            </FormContainer>\r\n            \r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default AddNewCampground","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\FormContainer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\EditCampgroundDetails.js",["155","156","157","158","159"],"import React,{useState,useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Button ,Image} from 'react-bootstrap';\r\nimport { Form, FormGroup, Label, Input,FormFeedback,FormText} from 'reactstrap';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Message from '../components/Message'\r\nimport {editPlace} from '../actions/campgroundActions'\r\nimport {PLACE_EDIT_RESET,} from '../constants/campgroundConstants'\r\nimport Loader from '../components/Loader'\r\nimport {PLACE_DETAIL_EDITED_PLACE} from '../constants/appConstants'\r\nimport {USER_NO_PERMISSION} from '../constants/appConstants'\r\nimport axios from 'axios';\r\n\r\nconst EditCampgroundDetails = ({history,match}) => {\r\n    const placeId = match.params.id\r\n\r\n    const placeDetail = useSelector(state => state.placeDetail)\r\n    const {place,loading:loadingPlace} = placeDetail\r\n    const dispatch = useDispatch()\r\n\r\n    const placeEdit = useSelector(state => state.placeEdit)\r\n    const {loading:loadingEdit,success:successEdit,error:errorEdit} = placeEdit\r\n\r\n    const statusState = useSelector(state => state.status)\r\n    const {userInfo: userStatus,isLoggedIn} = statusState\r\n    console.log(statusState);\r\n    const [title,setTitle] = useState('')\r\n    const [price,setPrice] = useState();\r\n    const [description,setDescription] = useState('')\r\n    const [location,setLocation] = useState('')\r\n    const [image,setImage] = useState([])\r\n    const [uploading,setUploading] = useState(false)\r\n    const [uploadedImages,setUploadedImages] = useState('')\r\n    const [uploadErr,setUploadErr] = useState(false)\r\n    const [deleteImages,setDeleteImages] = useState([]) \r\n\r\n    const [touchedTitle,setTouchedTitle] = useState(false)\r\n    const [touchedPrice,setTouchedPrice] = useState(false);\r\n    const [touchedDescription,setTouchedDescription] = useState(false)\r\n    const [touchedLocation,setTouchedLocation] = useState(false)\r\n    const [touchedImage,setTouchedImage] = useState(false)\r\n    const [touchedUpload,setTouchedUpload] = useState(false)\r\n    const [numOfDeletedImages,setNumofDeletedImages] = useState(0)\r\n    useEffect(()=>{\r\n        \r\n        \r\n        if(!isLoggedIn){\r\n            dispatch({type:USER_NO_PERMISSION})\r\n                history.push(`/campground/${placeId}`)\r\n        } \r\n        \r\n        if(!place.title){\r\n            history.push(`/campground/${placeId}`)\r\n        }\r\n        if(successEdit){\r\n            dispatch({type: PLACE_EDIT_RESET,})\r\n            dispatch({type:PLACE_DETAIL_EDITED_PLACE})\r\n            history.push(`/campground/${placeId}`)\r\n        }\r\n        setTitle(place.title)\r\n        setImage(place.image)\r\n        setDescription(place.description)\r\n        setPrice(place.price)\r\n        setLocation(place.location)\r\n        setDeleteImages(new Array(image.length))\r\n        \r\n    },[dispatch,match,history,placeId,place,successEdit,isLoggedIn])\r\n\r\n    function validate() {\r\n        const errors = {\r\n            title: '',\r\n            price: '',\r\n            location: '',\r\n            image: '',\r\n            desc: ''\r\n        };\r\n\r\n        if (touchedTitle && title.length < 3)\r\n            errors.title = 'Title should be >= 3 characters';\r\n        \r\n        const reg = /^\\d+$/;\r\n        if (touchedPrice && !reg.test(price))\r\n            errors.price = 'Price should contain only numbers';\r\n        if(touchedPrice && price<0)\r\n            errors.price = 'Price should be greater than zero';\r\n        \r\n        if(touchedLocation && location.length<3){\r\n            errors.location = 'Location should be >= 3 characters'\r\n        }\r\n\r\n        if(touchedImage && image.length<1){\r\n            errors.image = 'Image Invalid'\r\n        }\r\n\r\n        if(touchedDescription && description.length<=0)\r\n            errors.desc = 'No Description'\r\n\r\n        return errors;\r\n    }\r\n    \r\n    const errors = validate(title);\r\n\r\n    const onFileChange = (e) => {\r\n        setUploadedImages(e.target.files)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n       e.preventDefault()\r\n        const imageToBeDeleted = []\r\n        for(let i=0;i<deleteImages.length;i++){\r\n            if(deleteImages[i])\r\n                imageToBeDeleted.push(image[i])\r\n        } \r\n        console.log(imageToBeDeleted)\r\n        var formData = new FormData();\r\n        for (const key of Object.keys(uploadedImages)) {\r\n            formData.append('image',uploadedImages[key])\r\n        }\r\n        setUploading(true)\r\n        let newImageData\r\n        try{\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type' : 'multipart/form-data'\r\n                }\r\n            }\r\n            var {data} = await axios.post('/api/upload',formData,config)\r\n            newImageData = [...image,...data.filePath]\r\n            setImage(newImageData)\r\n            setUploading(false)\r\n            const campgroundDetails = {\r\n                title,\r\n                price,\r\n                description,\r\n                location,\r\n                image:newImageData,\r\n                deleteImages: imageToBeDeleted\r\n            }\r\n            dispatch(editPlace(campgroundDetails,placeId))\r\n        }catch(err){\r\n            setUploading(false)\r\n            setUploadErr(true);\r\n            setTouchedUpload(false)\r\n        }\r\n\r\n\r\n        \r\n      //dispatch(editPlace(campgroundDetails,placeId))\r\n   }\r\n\r\n   const handleCheckBox = (e,idx) => {\r\n       const newData = [...deleteImages]\r\n       if(newData[idx] === undefined)\r\n            newData[idx] = true\r\n        else\r\n            newData[idx] = !newData[idx];\r\n        setDeleteImages(newData)\r\n        let num=0;\r\n        for(let i=0;i<newData.length;i++){\r\n            if(newData[i])\r\n                num++;\r\n        }\r\n        setNumofDeletedImages(num);\r\n   }\r\n    \r\n   const displayPic = (pic) => {\r\n      return pic.replace('/upload','/upload/w_300')\r\n   }\r\n    return (\r\n        <Zoom bottom>\r\n            <Link to={`/campground/${placeId}`} className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Campground</h1>\r\n            \r\n            {uploadErr ? <Message variant='danger'>File must be in jpg or jpeg or png format</Message> : null}\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\"\r\n                            placeholder=\"Campground title\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)} \r\n                            onBlur = {() => setTouchedTitle(true)}\r\n                            valid={ errors.title==='' && title.length>=3}\r\n                            invalid={errors.title !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.title}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"price\">Price</Label>\r\n                        <Input type=\"text\" id=\"price\" name=\"price\"\r\n                            placeholder=\"Campground price\"\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)} \r\n                            onBlur = {() => setTouchedPrice(true)}\r\n                            valid={errors.price === '' && parseInt(price)}\r\n                            invalid={errors.price !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.price}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"location\">Location</Label>\r\n                        <Input type=\"text\" id=\"location\" name=\"location\"\r\n                            placeholder=\"Campground location\"\r\n                            value={location}\r\n                            onChange={(e) => setLocation(e.target.value)} \r\n                            onBlur = {() => setTouchedLocation(true)}\r\n                            valid={errors.location === '' && location.length>=3}\r\n                            invalid={errors.location !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.location}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label for=\"exampleFile\">File</Label>\r\n                    <Input type=\"file\" name=\"file\" id=\"exampleFile\" multiple={true} onChange={onFileChange} />\r\n                    <FormText color=\"muted\">\r\n                    Upload images of campground\r\n                    </FormText>\r\n                    {uploading && <Loader />}\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='desc' id='desc'>Description</Label>\r\n                    <Input \r\n                        type='textarea' \r\n                        name='desc' \r\n                        id='desc' \r\n                        placeholder=\"Campground description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        onBlur = {() => setTouchedDescription(true)}\r\n                        valid={errors.desc === '' && description}\r\n                        invalid={errors.desc !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.desc}</FormFeedback>\r\n                </FormGroup>\r\n                \r\n                <div className='mb-3'>\r\n                    {place && place.image && place.image.map((pic,index) => {\r\n                        return (\r\n                            <div className='mb-3' >\r\n                            <Image className='mb-1' src={displayPic(pic)} fluid thumbnail />\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                <Input \r\n                                    type=\"checkbox\" \r\n                                    name='deleteImages[]'\r\n                                    value={pic}\r\n                                    onChange={(e) => handleCheckBox(e,index)}\r\n                                \r\n                                />\r\n                                Delete\r\n                                </Label>\r\n                            </FormGroup>\r\n                            </div>\r\n                        )\r\n                    }) }\r\n                </div>\r\n                \r\n                    {loadingEdit ? <Loader /> : errorEdit ? <Message variant='danger'>{errorEdit}</Message> : null}\r\n                    {place && place.image && numOfDeletedImages === place.image.length ? <Message variant='danger'>Cannot delete all Images</Message> : (null)}\r\n\r\n                <Button  \r\n                    block \r\n                    type=\"submit\" \r\n                    color=\"primary\"\r\n                    disabled = {errors.title || errors.price || errors.location\r\n                       || errors.desc || !title ||  !price || !location || !description || ( numOfDeletedImages===place.image.length)}\r\n                >\r\n                    Edit campground\r\n                </Button>\r\n            </Form>\r\n\r\n            </FormContainer>\r\n            \r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default EditCampgroundDetails\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignUpScreen.js",["160"],"import React,{useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Form, FormGroup, Label, Input,FormFeedback} from 'reactstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { Button,Row,Col } from 'react-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport {USER_SIGNUP_RESET} from '../constants/userConstants'\r\nimport {signup,status} from '../actions/userActions'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst SignUpScreen = ({location,history}) => {\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/campgrounds'\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [username,setUserName] = useState('')\r\n\r\n    const [touchedEmail,setTouchedEmail] = useState(false)\r\n    const [touchedPassword,setTouchedPassword] = useState(false)\r\n    const [touchedUsername,setTouchedUsername] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const userSignUp = useSelector(state => state.signUp)\r\n    const {error,loading,userInfo,success} = userSignUp\r\n\r\n    const statusState = useSelector(state => state.status)\r\n    const {userInfo: userStatus,isLoggedIn} = statusState\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signup(email,password,username))\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if(isLoggedIn){\r\n            history.push(redirect)\r\n        }\r\n        else if(userInfo || userStatus || success || isLoggedIn){\r\n            await dispatch(status())\r\n            dispatch({type:USER_SIGNUP_RESET})\r\n            history.push(redirect)\r\n        }\r\n    },[success,history,userInfo,isLoggedIn,dispatch,userStatus,redirect])\r\n\r\n    function validate(){\r\n        const errors = {\r\n            email: '',\r\n            password: '',\r\n            username: ''\r\n        }\r\n        function validateEmail(elementValue){      \r\n            var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n            return emailPattern.test(elementValue); \r\n        } \r\n        if(touchedEmail && !validateEmail(email)){\r\n            errors.email = 'Not a valid email'\r\n        }\r\n        if(touchedPassword && password.length < 1){\r\n            errors.password = 'Password should be >= 1 characters'\r\n        }\r\n        if(touchedUsername && username.length<1){\r\n            errors.username = 'Password should be >= 1 characters'\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    const errors = validate();\r\n    return (\r\n        <Fade bottom>\r\n            <Link to={redirect} className='btn btn-light my-3'>\r\n                    Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Sign Up</h1>\r\n                \r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"username\">Username</Label>\r\n                        <Input type=\"input\" id=\"username\" name=\"username\"\r\n                            placeholder=\"John Doe\"\r\n                            value={username}\r\n                            onChange={(e) => setUserName(e.target.value)} \r\n                            onBlur = {() => setTouchedUsername(true)}\r\n                            valid={ errors.username==='' && username.length>=1}\r\n                            invalid={errors.username !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.username}</FormFeedback>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"email\">Email</Label>\r\n                        <Input type=\"email\" id=\"email\" name=\"email\"\r\n                            placeholder=\"abc@def.com\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)} \r\n                            onBlur = {() => setTouchedEmail(true)}\r\n                            valid={ errors.email==='' && email.length>=3}\r\n                            invalid={errors.email !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.email}</FormFeedback>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Input type=\"password\" id=\"password\" name=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                            onBlur = {() => setTouchedPassword(true)}\r\n                            valid={ errors.password==='' && password.length>=1}\r\n                            invalid={errors.password !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.password}</FormFeedback>\r\n                    </FormGroup>\r\n                    {loading && <Loader />}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    <Button\r\n                        block\r\n                        type='submit'\r\n                        color='primary'\r\n                        disabled = {errors.email || errors.password || !email || !password} >\r\n                            Sign Up\r\n                    </Button>\r\n                </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                    Aldready have an account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Log in</Link>\r\n                    </Col>\r\n            </Row>\r\n            </FormContainer>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default SignUpScreen\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignInScreen.js",["161"],"import React,{useEffect,useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Form, FormGroup, Label, Input,FormFeedback} from 'reactstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { Button,Row,Col } from 'react-bootstrap';\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport {USER_SIGNIN_RESET} from '../constants/userConstants'\r\nimport {signin,status} from '../actions/userActions'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n\r\nconst SignInScreen = ({location,history}) => {\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/campgrounds'\r\n\r\n    const [email,setEmail] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    \r\n    const [touchedEmail,setTouchedEmail] = useState(false)\r\n    const [touchedPassword,setTouchedPassword] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const userSignIn = useSelector(state => state.signIn)\r\n    const {error,loading,userInfo,success} = userSignIn\r\n\r\n    const statusState = useSelector(state => state.status)\r\n    const {userInfo: userStatus,isLoggedIn} = statusState\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email,password))\r\n    }\r\n\r\n    useEffect(async () => {\r\n        if(isLoggedIn){\r\n            history.push(redirect)\r\n        }\r\n        \r\n        else if(userInfo || userStatus || success || isLoggedIn){\r\n            \r\n            await dispatch(status())\r\n            dispatch({type:USER_SIGNIN_RESET})\r\n            history.push(redirect)\r\n        }\r\n    },[success,history,userInfo,isLoggedIn,dispatch,userStatus,redirect])\r\n\r\n    function validate(){\r\n        const errors = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n        function validateEmail(elementValue){      \r\n            var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n            return emailPattern.test(elementValue); \r\n        } \r\n        if(touchedEmail && !validateEmail(email)){\r\n            errors.email = 'Not a valid email'\r\n        }\r\n        if(touchedPassword && password.length < 1){\r\n            errors.password = 'Password should be >= 1 characters'\r\n        }\r\n        return errors;\r\n    }\r\n\r\n    const errors = validate();\r\n    return (\r\n        <Fade bottom>\r\n            <Link to={redirect} className='btn btn-light my-3'>\r\n                    Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Sign In</h1>\r\n                <Form onSubmit={submitHandler}>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"email\">Email</Label>\r\n                        <Input type=\"email\" id=\"email\" name=\"email\"\r\n                            placeholder=\"abc@def.com\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)} \r\n                            onBlur = {() => setTouchedEmail(true)}\r\n                            valid={ errors.email==='' && email.length>=3}\r\n                            invalid={errors.email !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.email}</FormFeedback>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"password\">Password</Label>\r\n                        <Input type=\"password\" id=\"password\" name=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                            onBlur = {() => setTouchedPassword(true)}\r\n                            valid={ errors.password==='' && password.length>=1}\r\n                            invalid={errors.password !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.password}</FormFeedback>\r\n                    </FormGroup>\r\n                    {loading && <Loader />}\r\n                    {error && <Message variant='danger'>Invalid email or password</Message>}\r\n                    <Button\r\n                        block\r\n                        type='submit'\r\n                        color='primary'\r\n                        disabled = {errors.email || errors.password || !email || !password} >\r\n                            Sign In\r\n                    </Button>\r\n                </Form>\r\n                <Row className='py-3'>\r\n                    <Col>\r\n                        New Customer? <Link to={redirect ? `/signup/?redirect=${redirect}` : '/register'}>Register</Link>\r\n                    </Col>\r\n                </Row>\r\n            </FormContainer>\r\n\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default SignInScreen\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\userActions.js",["162"],"import axios from 'axios'\r\n\r\nimport {\r\n    USER_SIGNIN_FAIL,\r\n    USER_SIGNIN_REQUEST,\r\n    USER_SIGNIN_SUCCESS,\r\n    USER_SIGNUP_FAIL,\r\n    USER_SIGNUP_REQUEST,\r\n    USER_SIGNUP_SUCCESS,\r\n    USER_STATUS_FAIL,\r\n    USER_STATUS_REQUEST,\r\n    USER_STATUS_SUCCESS,\r\n    USER_SIGNOUT_FAIL,\r\n    USER_SIGNOUT_REQUEST,\r\n    USER_SIGNOUT_SUCCESS,\r\n    USER_PROFILE_FAIL,\r\n    USER_PROFILE_REQUEST,\r\n    USER_PROFILE_SUCCESS\r\n} from '../constants/userConstants'\r\n\r\nimport {\r\n    USER_SIGNEDIN,\r\n    USER_SIGNEDUP,\r\n    USER_SIGNOUT\r\n} from '../constants/appConstants'\r\n\r\n//SIGN UP\r\nexport const signup = (email,password,username) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_SIGNUP_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.post('/api/users/signup',{email,password,username})\r\n\r\n        dispatch({\r\n            type: USER_SIGNUP_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_SIGNEDUP\r\n        })\r\n        /* const newData = {\r\n            loggedIn: true,\r\n            user: {\r\n                _id: data.createdUser._id,\r\n                email: data.createdUser.email,\r\n                username: data.createdUser.username\r\n            }\r\n        }\r\n        dispatch({\r\n            type: USER_STATUS_SUCCESS,\r\n            payload: newData\r\n        }) */\r\n    }catch(error){\r\n        dispatch({   \r\n            type:USER_SIGNUP_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//STATUS\r\nexport const status = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_STATUS_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.get('/api/users/status')\r\n\r\n        dispatch({\r\n            type: USER_STATUS_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({   \r\n            type:USER_STATUS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//SIGN IN\r\nexport const signin = (email,password) => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_SIGNIN_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.post('/api/users/signin',{email,password})\r\n\r\n        dispatch({\r\n            type: USER_SIGNEDIN\r\n        })\r\n        dispatch({\r\n            type: USER_SIGNIN_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({   \r\n            type:USER_SIGNIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n//SIGN OUT\r\nexport const signout = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type:USER_SIGNOUT_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.get('/api/users/signout')\r\n\r\n        dispatch({\r\n            type: USER_SIGNOUT_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_SIGNOUT,\r\n        })\r\n    }catch(error){\r\n        dispatch({   \r\n            type:USER_SIGNOUT_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//PROFILE SCREEN DETAILS\r\nexport const profile = () => async (dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_PROFILE_REQUEST\r\n        })\r\n\r\n        const {data} = await axios.get('/api/users/profile')\r\n\r\n        dispatch({\r\n            type: USER_PROFILE_SUCCESS,\r\n            payload : data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({   \r\n            type:USER_SIGNOUT_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                error.response.data.message : error.message\r\n        })\r\n    }\r\n}","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\appReducer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\appConstants.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\PopUp.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Map.js",["163"],"import React from 'react';\r\nimport './Map.css';\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoidmFydW4taGVnZGUiLCJhIjoiY2trNWZrYXluMDZyZDJxbDh5NnZ3b2hqNCJ9.BRu8GNvnKcCuegWhnDWiZg';\r\n\r\nclass Map extends React.Component{\r\n  constructor(props) {\r\n  super(props);\r\n  this.state = {\r\n    lat: 12.9716,\r\n    lng: 77.5946,\r\n    zoom: 8\r\n  };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const map = new mapboxgl.Map({\r\n    container: this.mapContainer,\r\n    style: 'mapbox://styles/mapbox/streets-v11',\r\n    center: this.props.coOrd,\r\n    zoom: this.state.zoom\r\n    });\r\n    map.addControl(new mapboxgl.NavigationControl())\r\n    var marker = new mapboxgl.Marker()\r\n    .setLngLat(this.props.coOrd)\r\n    .addTo(map)\r\n    .setPopup(\r\n      new mapboxgl.Popup({offset: 25})\r\n      .setHTML(\r\n        `<p>${this.props.campground.title},<br />${this.props.campground.location}</p>`)\r\n    );\r\n    \r\n    map.on('move', () => {\r\n        this.setState({\r\n            lng: map.getCenter().lng.toFixed(4),\r\n            lat: map.getCenter().lat.toFixed(4),\r\n            zoom: map.getZoom().toFixed(2)\r\n        });\r\n    });\r\n  }\r\n\r\n  render() {\r\n  return (\r\n    <div>\r\n      <div className='sidebarStyle'>\r\n      \r\n      </div>\r\n      <div ref={el => this.mapContainer = el} className='mapContainer' />\r\n    </div>\r\n  )\r\n}\r\n\r\n}\r\n\r\nexport default Map;","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\LandingScreen.js",["164","165","166","167"],"import React,{useEffect} from 'react'\r\nimport './LandingScreen.css'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {signout,status} from '../actions/userActions'\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst LandingScreen = () => {\r\n  \r\n    const signOutDetails = useSelector(state => state.signOut)\r\n    const {success,error} = signOutDetails\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(status())\r\n    },[success,error,dispatch])\r\n    \r\n    const logoutHandler = () => {\r\n        dispatch(signout())\r\n    }\r\n\r\n    const statusState = useSelector(state => state.status)\r\n    const {userInfo: userStatus,isLoggedIn} = statusState\r\n\r\n    return (\r\n        <Fade >\r\n        <div  className=\"d-flex text-center text-white bg-dark body\">\r\n            <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\r\n        <header className=\"mb-auto\">\r\n            <div className=\"landing-navbar\">\r\n                <h3 style={{color: \"white\"}} className=\"float-md-left mb-0\">\r\n                    <a style={{color:\"white\"}} href='/'>Trek-N-Travel</a>\r\n                </h3>\r\n                <nav className=\"nav nav-masthead justify-content-center float-md-right\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href='/'><i class=\"fas fa-home\"></i> Home</a>\r\n                    <a className=\"nav-link\" href=\"/campgrounds\"><i class=\"fas fa-campground\"></i> Campgrounds</a>\r\n                    {isLoggedIn ? (\r\n                        <a className=\"nav-link\" href=\"#\" onClick={logoutHandler}>Logout</a>\r\n                    ) : (\r\n                        <>\r\n                        \r\n                        <a className=\"nav-link\" href=\"/signup\"><i class=\"fas fa-user-plus\"></i>  Register</a>\r\n                        <a className=\"nav-link\" href=\"/signin\"><i class=\"fas fa-user\"></i>  Login</a>\r\n                        </>\r\n                    )}\r\n                    \r\n             \r\n                    \r\n              \r\n                </nav>\r\n            </div>\r\n        </header>\r\n        <main className=\"px-3 py-5 landing-header\">\r\n            <h1 style={{color: \"white\"}}>Trek-N-Travel</h1>\r\n            <p className=\"lead\"> Welcome to Trek-N-Travel! <br /> Jump right in and explore our many campgrounds. <br />\r\n                Feel free to share some of your own and comment on others!</p>\r\n            <a href=\"/campgrounds\" className=\"btn btn-lg btn-secondary font-weight-bold border-white bg-white\">View\r\n                Campgrounds</a>\r\n        </main>\r\n\r\n        <footer className=\"mt-auto text-white-50\">\r\n            <p>&copy; 2020 </p>\r\n        </footer>\r\n\r\n\r\n    </div>\r\n    <ul class=\"slideshow\">\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n      <li></li>\r\n    </ul>\r\n        </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default LandingScreen\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Comment.js",["168","169","170","171","172","173","174","175"],"import React,{useState} from 'react'\r\nimport {Row,Col,Card,Accordion,Button} from 'react-bootstrap'\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { Form, FormGroup, Label, Input,FormFeedback,FormText} from 'reactstrap';\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {editReviewAction,deleteReviewAction} from '../actions/campgroundActions'\r\nimport Loader from './Loader';\r\n\r\nconst Comment = ({review,reviewAuthor}) => {\r\n\r\n    const placeDetails = useSelector(state => state.placeDetail)\r\n    const {place} = placeDetails\r\n    const id = place._id\r\n\r\n    const editReviewPlace = useSelector(state => state.editReview)\r\n    const {loading,success,error} = editReviewPlace\r\n\r\n    const dispatch = useDispatch()\r\n    const [editReview,setEditReview] = useState(false)\r\n    const [originalComment,setOriginalComment] = useState(review.body)\r\n    const [originalRating,setOriginalRating] = useState(review.rating)\r\n    const [comment,setComment] = useState(review.body)\r\n    const [rating,setRating] = useState(review.rating)\r\n    const editClicked = () => {\r\n        setEditReview(prev => !prev)\r\n    }\r\n    const [touchedComment,setTouchedComment] = useState(false)\r\n    const userStatus = useSelector(state => state.status)\r\n    const {isLoggedIn,userInfo} = userStatus\r\n\r\n    const ratingChanged = (newRating) => {\r\n        setRating(newRating);\r\n    };\r\n\r\n    const deleteReviewHandler = () => {\r\n        console.log(\"Hello\");\r\n        dispatch(deleteReviewAction(id,review._id))\r\n    }\r\n\r\n    function validate() {\r\n        const errors = {\r\n            comment : ''\r\n        };\r\n\r\n        if(comment.length<1 && touchedComment){\r\n            errors.comment = \"No Comment\"\r\n        }\r\n\r\n        return errors;\r\n    }\r\n    const errors = validate(comment);\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const editReview = {\r\n            body: comment,\r\n            rating: rating\r\n        }\r\n        dispatch(editReviewAction(id,review._id,editReview))\r\n        setOriginalComment(comment)\r\n        setOriginalRating(rating)\r\n        setEditReview(prev => !prev)\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {review  ? (\r\n              <>\r\n                {editReview ? (\r\n                    <>\r\n                        \r\n                        <p  style={{fontSize:\"20px\", fontWeight:\"700\"}}>{review.author.username}</p>\r\n                        <p onClick={editClicked}  className='btn btn-light '>Go Back</p>\r\n                        \r\n                        <FormGroup>\r\n                                <Label htmlFor='desc' id='desc'>Description</Label>\r\n                                <Input \r\n                                    type='textarea' \r\n                                    name='desc' \r\n                                    id='desc' \r\n                                    placeholder=\"Your Comment\"\r\n                                    value={comment}\r\n                                    onChange={(e) => setComment(e.target.value)}\r\n                                    onBlur = {() => setTouchedComment(true)}\r\n                                    valid={errors.comment === '' && comment.length > 1}\r\n                                    invalid={errors.comment !== ''}\r\n                                    />\r\n                                    <FormFeedback>{errors.comment}</FormFeedback>\r\n                            </FormGroup>    \r\n                            <ReactStars \r\n                                    size =  {25}\r\n                                    count = {5}\r\n                                    activeColor = \"gold\"\r\n                                    value = {rating}\r\n                                    a11y = {true}\r\n                                    isHalf = {true}\r\n                                    emptyIcon = {<i className=\"far fa-star\" />}\r\n                                    halfIcon = {<i className=\"fa fa-star-half-alt\" />}\r\n                                    filledIcon = {<i className=\"fa fa-star\" />}\r\n                                    onChange = {ratingChanged}\r\n                                   \r\n                            />\r\n                            {loading && <Loader />}\r\n                            <Button\r\n                                block\r\n                                type='submit'\r\n                                color=\"primary\"\r\n                                disabled={!comment.length>0}\r\n                                onClick={(e) => submitHandler(e)}\r\n                            >\r\n                                Edit Review\r\n                            </Button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    <Row >\r\n                    <Col md={7} sm={12} style={{fontSize:\"20px\", fontWeight:\"700\"}}>{review.author.username}</Col>\r\n                    <Col md={5} sm={12}>\r\n                        <ReactStars \r\n                            size =  {15}\r\n                            count = {5}\r\n                            activeColor = \"gold\"\r\n                            value = {originalRating}\r\n                            a11y = {true}\r\n                            isHalf = {true}\r\n                            emptyIcon = {<i className=\"far fa-star\" />}\r\n                            halfIcon = {<i className=\"fa fa-star-half-alt\" />}\r\n                            filledIcon = {<i className=\"fa fa-star\" />}\r\n                            edit = {false}  //MAKES COMPONENT READ ONLY\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row >\r\n                    <Col>{originalComment}</Col>\r\n                </Row>\r\n                {reviewAuthor ? (\r\n                    <Row>\r\n                    <Col md={3} className='d-flex flex-row pt-2' >\r\n                                <Button onClick={editClicked} variant='light' className='btn-sm'>\r\n                                    <i className='fas fa-edit'></i>\r\n                                </Button>\r\n                                <Button\r\n                                    onClick={deleteReviewHandler}\r\n                                    variant='danger'\r\n                                    className='btn-sm'\r\n                                >\r\n                                <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                    </Col>\r\n                    </Row>\r\n                ) : (null)}\r\n                \r\n                </>\r\n                )}\r\n\r\n                \r\n                </>\r\n            ) : (null)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\AddReview.js",["176","177","178","179","180"],"import React,{useState,useEffect} from 'react'\r\nimport { Accordion,Button,Card } from 'react-bootstrap'\r\nimport FormContainer from './FormContainer'\r\nimport ReactStars from \"react-rating-stars-component\";\r\nimport { Form, FormGroup, Label, Input,FormFeedback,FormText} from 'reactstrap';\r\nimport './AddReview.css'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {addReview} from '../actions/campgroundActions'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst AddReview = ({id}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [rating,setRating] = useState(0.5)\r\n    const [comment,setComment] = useState('')\r\n    const [touchedComment,setTouchedComment] = useState(false)\r\n\r\n    const userStatus = useSelector(state => state.status)\r\n    const {isLoggedIn,userInfo} = userStatus\r\n\r\n    const ratingChanged = (newRating) => {\r\n        setRating(newRating);\r\n    };\r\n\r\n    function validate() {\r\n        const errors = {\r\n            comment : ''\r\n        };\r\n\r\n        if(comment.length<1 && touchedComment){\r\n            errors.comment = \"No Comment\"\r\n        }\r\n\r\n        return errors;\r\n    }\r\n    const errors = validate(comment);\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addReview(comment,rating,id))\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Accordion style={{maxWidth:\"500px\",paddingBottom:'20px'}} defaultActiveKey=\"0\">\r\n                <Card>\r\n                    <Accordion.Toggle className='cursor' as={Card.Header} eventKey=\"0\">\r\n                    Add Review\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        {isLoggedIn ? ( \r\n                            <Card.Body>\r\n                            <FormGroup>\r\n                                <Label htmlFor='desc' id='desc'>Description</Label>\r\n                                <Input \r\n                                    type='textarea' \r\n                                    name='desc' \r\n                                    id='desc' \r\n                                    placeholder=\"Your Comment\"\r\n                                    value={comment}\r\n                                    onChange={(e) => setComment(e.target.value)}\r\n                                    onBlur = {() => setTouchedComment(true)}\r\n                                    valid={errors.comment === '' && comment.length > 1}\r\n                                    invalid={errors.comment !== ''}\r\n                                    />\r\n                                    <FormFeedback>{errors.comment}</FormFeedback>\r\n                            </FormGroup>    \r\n                            <ReactStars \r\n                                    size =  {25}\r\n                                    count = {5}\r\n                                    activeColor = \"gold\"\r\n                                    value = {rating}\r\n                                    a11y = {true}\r\n                                    isHalf = {true}\r\n                                    emptyIcon = {<i className=\"far fa-star\" />}\r\n                                    halfIcon = {<i className=\"fa fa-star-half-alt\" />}\r\n                                    filledIcon = {<i className=\"fa fa-star\" />}\r\n                                    onChange = {ratingChanged}\r\n                                   \r\n                            />\r\n                            <Button\r\n                                block\r\n                                type='submit'\r\n                                color=\"primary\"\r\n                                disabled={!comment.length>0}\r\n                                onClick={(e) => submitHandler(e)}\r\n                            >\r\n                                Add Review\r\n                            </Button>\r\n                        \r\n                        </Card.Body>\r\n                        ) : ( \r\n                            <Card.Body>\r\n                                You need to be signed in to add a review.<Link  to={`/signin?redirect=/campground/${id}`}> Click here to sign in.</Link>\r\n                            </Card.Body>\r\n                        )}\r\n                        \r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddReview\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\ProfileScreen.js",["181","182"],"import React,{useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {profile } from '../actions/userActions'\r\nimport {Row,Col,Image,ListGroup} from 'react-bootstrap'\r\n\r\n\r\nconst ProfileScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const data = useSelector(state => state.profile)\r\n    const {loading,error,profile:userProfile} = data\r\n    \r\n    \r\n    useEffect(() => {\r\n        dispatch(profile())\r\n    },[dispatch])\r\n    \r\n    return (\r\n        <div>\r\n            {userProfile ? (\r\n                <>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        <ListGroup className='d-flex align-content-center'>\r\n                            <ListGroup.Item>\r\n                                <Image className='' width=\"100px\" src={`https://avatars.dicebear.com/4.5/api/human/${userProfile.user._id}.svg`} fluid rounded/>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                \r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n                </>\r\n            ) : (null)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Paginate.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":50,"column":3,"nodeType":"189","endLine":50,"endColumn":12,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":15,"column":25,"nodeType":"193","endLine":15,"endColumn":114},{"ruleId":"194","severity":1,"message":"195","line":176,"column":15,"nodeType":"189","messageId":"196","endLine":176,"endColumn":19},{"ruleId":"194","severity":1,"message":"197","line":7,"column":32,"nodeType":"189","messageId":"196","endLine":7,"endColumn":44},{"ruleId":"194","severity":1,"message":"198","line":7,"column":56,"nodeType":"189","messageId":"196","endLine":7,"endColumn":65},{"ruleId":"194","severity":1,"message":"199","line":15,"column":11,"nodeType":"189","messageId":"196","endLine":15,"endColumn":17},{"ruleId":"194","severity":1,"message":"200","line":32,"column":20,"nodeType":"189","messageId":"196","endLine":32,"endColumn":36},{"ruleId":"194","severity":1,"message":"201","line":32,"column":43,"nodeType":"189","messageId":"196","endLine":32,"endColumn":57},{"ruleId":"194","severity":1,"message":"202","line":35,"column":20,"nodeType":"189","messageId":"196","endLine":35,"endColumn":31},{"ruleId":"194","severity":1,"message":"203","line":37,"column":12,"nodeType":"189","messageId":"196","endLine":37,"endColumn":18},{"ruleId":"194","severity":1,"message":"204","line":38,"column":12,"nodeType":"189","messageId":"196","endLine":38,"endColumn":19},{"ruleId":"194","severity":1,"message":"205","line":45,"column":11,"nodeType":"189","messageId":"196","endLine":45,"endColumn":21},{"ruleId":"206","severity":1,"message":"207","line":54,"column":13,"nodeType":"208","messageId":"209","endLine":57,"endColumn":14},{"ruleId":"187","severity":1,"message":"210","line":87,"column":7,"nodeType":"211","endLine":87,"endColumn":45,"suggestions":"212"},{"ruleId":"194","severity":1,"message":"213","line":30,"column":25,"nodeType":"189","messageId":"196","endLine":30,"endColumn":40},{"ruleId":"194","severity":1,"message":"214","line":31,"column":12,"nodeType":"189","messageId":"196","endLine":31,"endColumn":25},{"ruleId":"194","severity":1,"message":"215","line":20,"column":26,"nodeType":"189","messageId":"196","endLine":20,"endColumn":38},{"ruleId":"194","severity":1,"message":"216","line":27,"column":22,"nodeType":"189","messageId":"196","endLine":27,"endColumn":32},{"ruleId":"194","severity":1,"message":"213","line":43,"column":25,"nodeType":"189","messageId":"196","endLine":43,"endColumn":40},{"ruleId":"194","severity":1,"message":"214","line":44,"column":12,"nodeType":"189","messageId":"196","endLine":44,"endColumn":25},{"ruleId":"187","severity":1,"message":"217","line":69,"column":7,"nodeType":"211","endLine":69,"endColumn":68,"suggestions":"218"},{"ruleId":"187","severity":1,"message":"219","line":36,"column":15,"nodeType":"220","endLine":45,"endColumn":6},{"ruleId":"187","severity":1,"message":"219","line":36,"column":15,"nodeType":"220","endLine":47,"endColumn":6},{"ruleId":"194","severity":1,"message":"221","line":16,"column":5,"nodeType":"189","messageId":"196","endLine":16,"endColumn":22},{"ruleId":"194","severity":1,"message":"222","line":25,"column":9,"nodeType":"189","messageId":"196","endLine":25,"endColumn":15},{"ruleId":"194","severity":1,"message":"223","line":4,"column":9,"nodeType":"189","messageId":"196","endLine":4,"endColumn":13},{"ruleId":"194","severity":1,"message":"224","line":5,"column":9,"nodeType":"189","messageId":"196","endLine":5,"endColumn":22},{"ruleId":"194","severity":1,"message":"216","line":23,"column":22,"nodeType":"189","messageId":"196","endLine":23,"endColumn":32},{"ruleId":"225","severity":1,"message":"226","line":38,"column":25,"nodeType":"193","endLine":38,"endColumn":82},{"ruleId":"194","severity":1,"message":"227","line":2,"column":17,"nodeType":"189","messageId":"196","endLine":2,"endColumn":21},{"ruleId":"194","severity":1,"message":"198","line":2,"column":22,"nodeType":"189","messageId":"196","endLine":2,"endColumn":31},{"ruleId":"194","severity":1,"message":"228","line":4,"column":10,"nodeType":"189","messageId":"196","endLine":4,"endColumn":14},{"ruleId":"194","severity":1,"message":"229","line":4,"column":53,"nodeType":"189","messageId":"196","endLine":4,"endColumn":61},{"ruleId":"194","severity":1,"message":"230","line":16,"column":20,"nodeType":"189","messageId":"196","endLine":16,"endColumn":27},{"ruleId":"194","severity":1,"message":"231","line":16,"column":28,"nodeType":"189","messageId":"196","endLine":16,"endColumn":33},{"ruleId":"194","severity":1,"message":"232","line":29,"column":12,"nodeType":"189","messageId":"196","endLine":29,"endColumn":22},{"ruleId":"194","severity":1,"message":"233","line":29,"column":23,"nodeType":"189","messageId":"196","endLine":29,"endColumn":31},{"ruleId":"194","severity":1,"message":"234","line":1,"column":24,"nodeType":"189","messageId":"196","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"235","line":3,"column":8,"nodeType":"189","messageId":"196","endLine":3,"endColumn":21},{"ruleId":"194","severity":1,"message":"228","line":5,"column":10,"nodeType":"189","messageId":"196","endLine":5,"endColumn":14},{"ruleId":"194","severity":1,"message":"229","line":5,"column":53,"nodeType":"189","messageId":"196","endLine":5,"endColumn":61},{"ruleId":"194","severity":1,"message":"233","line":20,"column":23,"nodeType":"189","messageId":"196","endLine":20,"endColumn":31},{"ruleId":"194","severity":1,"message":"236","line":12,"column":12,"nodeType":"189","messageId":"196","endLine":12,"endColumn":19},{"ruleId":"194","severity":1,"message":"231","line":12,"column":20,"nodeType":"189","messageId":"196","endLine":12,"endColumn":25},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPath'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["239"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'data' is assigned a value but never used.","unusedVar","'CarouselItem' is defined but never used.","'Accordion' is defined but never used.","'campId' is assigned a value but never used.","'loadingNewReview' is assigned a value but never used.","'errorNewReview' is assigned a value but never used.","'successLike' is assigned a value but never used.","'rating' is assigned a value but never used.","'comment' is assigned a value but never used.","'displayPic' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has missing dependencies: 'isLoggedIn', 'successNewReview', and 'userInfo.user._id'. Either include them or remove the dependency array.","ArrayExpression",["240"],"'setTouchedImage' is assigned a value but never used.","'touchedUpload' is assigned a value but never used.","'loadingPlace' is assigned a value but never used.","'userStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'image.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDeleteImages' needs the current value of 'image.length'.",["241"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'USER_PROFILE_FAIL' is defined but never used.","'marker' is assigned a value but never used.","'Link' is defined but never used.","'LinkContainer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Card' is defined but never used.","'Form' is defined but never used.","'FormText' is defined but never used.","'success' is assigned a value but never used.","'error' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'useEffect' is defined but never used.","'FormContainer' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},"Add dependencies array: []",{"range":"248","text":"249"},"Update the dependencies array to be: [match, dispatch, match.params.id, place, successNewReview, isLoggedIn, userInfo.user._id]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, match, history, placeId, place, successEdit, isLoggedIn, image.length]",{"range":"252","text":"253"},[1575,1575],", []",[2723,2761],"[match, dispatch, match.params.id, place, successNewReview, isLoggedIn, userInfo.user._id]",[2911,2972],"[dispatch, match, history, placeId, place, successEdit, isLoggedIn, image.length]"]