[{"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\index.js":"1","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\App.js":"2","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\store.js":"3","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Header.js":"4","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Footer.js":"5","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\campgroundReducer.js":"7","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\campgroundActions.js":"8","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\campgroundConstants.js":"9","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Place.js":"10","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\PlaceDetailScreen.js":"11","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Message.js":"12","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Loader.js":"13","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\AddNewCampground.js":"14","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\FormContainer.js":"15","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\EditCampgroundDetails.js":"16","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignUpScreen.js":"17","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignInScreen.js":"18","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\userReducer.js":"19","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\userConstants.js":"20","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\userActions.js":"21"},{"size":361,"mtime":1609597714772,"results":"22","hashOfConfig":"23"},{"size":1461,"mtime":1610887593176,"results":"24","hashOfConfig":"23"},{"size":933,"mtime":1610904513540,"results":"25","hashOfConfig":"23"},{"size":2541,"mtime":1610906525666,"results":"26","hashOfConfig":"23"},{"size":427,"mtime":1609614192286,"results":"27","hashOfConfig":"23"},{"size":2479,"mtime":1610300873147,"results":"28","hashOfConfig":"23"},{"size":3794,"mtime":1610266233062,"results":"29","hashOfConfig":"23"},{"size":3138,"mtime":1610286786325,"results":"30","hashOfConfig":"23"},{"size":1086,"mtime":1609785178737,"results":"31","hashOfConfig":"23"},{"size":918,"mtime":1609791221068,"results":"32","hashOfConfig":"23"},{"size":3386,"mtime":1610882905684,"results":"33","hashOfConfig":"23"},{"size":248,"mtime":1609662790610,"results":"34","hashOfConfig":"23"},{"size":403,"mtime":1609662583429,"results":"35","hashOfConfig":"23"},{"size":7479,"mtime":1609784819953,"results":"36","hashOfConfig":"23"},{"size":345,"mtime":1609695587169,"results":"37","hashOfConfig":"23"},{"size":7986,"mtime":1610882999017,"results":"38","hashOfConfig":"23"},{"size":4270,"mtime":1610907249626,"results":"39","hashOfConfig":"23"},{"size":4335,"mtime":1610907786954,"results":"40","hashOfConfig":"23"},{"size":2946,"mtime":1610906974363,"results":"41","hashOfConfig":"23"},{"size":736,"mtime":1610906795558,"results":"42","hashOfConfig":"23"},{"size":3041,"mtime":1610904875870,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"12cpiaz",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\index.js",[],["91","92"],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\App.js",["93","94"],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\store.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Header.js",["95","96","97"],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Footer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\HomeScreen.js",["98"],"import React,{useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport Place from '../components/Place'\r\nimport {listPlaces} from '../actions/campgroundActions'\r\nimport {Link} from 'react-router-dom'\r\nimport Fade from 'react-reveal/Fade';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {PLACE_LIST_ADDED_PLACE_REMOVE} from '../constants/campgroundConstants'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nconst HomeScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const placeList = useSelector(state => state.placeList)\r\n    const {loading,error,places,addedPlace,editedPlace} = placeList\r\n    console.log(\"HELLO WORLD\")\r\n    useEffect(()=>{\r\n        dispatch(listPlaces())\r\n        if(addedPlace){\r\n            toast.success('Added new campground', {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n            dispatch({type:PLACE_LIST_ADDED_PLACE_REMOVE})\r\n        }\r\n        \r\n        \r\n    },[dispatch,addedPlace])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Welcome to Trek-N-Travel</h1>\r\n            <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            />\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Row>\r\n                    {places.length>0 ? places.map(place => (\r\n                        <Col  key={place._id} sm={12} md={6} lg={4} >\r\n                            <Fade bottom>\r\n                                <Place place={place} history={history} />\r\n                            </Fade>                        \r\n                        </Col>\r\n                        \r\n                    )) : ( \r\n                        <Message variant='info'>No product found. <Link to='/'>Go Back</Link> </Message>\r\n                    )}\r\n                </Row>\r\n            )}\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\campgroundReducer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\campgroundActions.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\campgroundConstants.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Place.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\PlaceDetailScreen.js",["99"],"import React,{useState,useEffect} from 'react'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport {placeDetails} from '../actions/campgroundActions'\r\nimport {Link} from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {Row,Col,Image} from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport {PLACE_DETAIL_EDITED_PLACE_REMOVE} from '../constants/campgroundConstants'\r\n\r\nconst PlaceDetailScreen = ({match}) => {\r\n\r\n    const placeDetail = useSelector(state => state.placeDetail)\r\n    const {loading,place,error,editedPlace} = placeDetail \r\n    const dispatch = useDispatch()\r\n\r\n    const [rating,setRating] = useState(0)\r\n    const [comment,setComment] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(placeDetails(match.params.id))\r\n        if(editedPlace){\r\n            toast.success('Updated campground', {\r\n            position: \"top-center\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            });\r\n            dispatch({type:PLACE_DETAIL_EDITED_PLACE_REMOVE})\r\n        }\r\n    },[match,dispatch])\r\n\r\n    const reviewSubmithandler = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {!error && <Link className='btn btn-light my-3' to={`/campground/${match.params.id}/edit`}>\r\n                Edit\r\n            </Link>}\r\n            <ToastContainer\r\n            position=\"top-center\"\r\n            autoClose={3000}\r\n            hideProgressBar={false}\r\n            newestOnTop={false}\r\n            closeOnClick\r\n            rtl={false}\r\n            pauseOnFocusLoss\r\n            draggable\r\n            pauseOnHover\r\n            />\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                <Row>\r\n                    <Col md={5}>\r\n                        <Image src={place.image} alt={place.name} fluid />\r\n                        <h1>{place.title}</h1>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n                <Row>\r\n                   <Col>\r\n                    <h3>Reviews</h3>\r\n                    <div>\r\n                        Rating\r\n                    <input type='text' value={rating} onChange={(e) => setRating(e.target.value)} />\r\n                    </div>\r\n                    <div><p>Comment</p> <input type='text' value={comment} onChange={(e) => setComment(e.target.value)} />\r\n                    </div>\r\n                   \r\n                    <button onClick = {reviewSubmithandler}>Submit</button>\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <h3>Reviews</h3>\r\n                    {place.reviews.map(review => {\r\n                        return (\r\n                            <Col md={12}>\r\n                                {review.body}\r\n                                {review.rating}\r\n                            </Col>\r\n                        )\r\n                        }\r\n                    )}\r\n                </Row>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceDetailScreen\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Message.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\Loader.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\AddNewCampground.js",["100"],"import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Form, FormGroup, Label, Input,FormFeedback} from 'reactstrap';\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport {addPlace} from '../actions/campgroundActions'\r\nimport {PLACE_CREATE_RESET} from '../constants/campgroundConstants'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\n\r\nconst AddNewCampground = ({history}) => {\r\n    const [title,setTitle] = useState('')\r\n    const [price,setPrice] = useState();\r\n    const [description,setDescription] = useState('')\r\n    const [location,setLocation] = useState('')\r\n    const [image,setImage] = useState('')\r\n\r\n    const [touchedTitle,setTouchedTitle] = useState(false)\r\n    const [touchedPrice,setTouchedPrice] = useState(false);\r\n    const [touchedDescription,setTouchedDescription] = useState(false)\r\n    const [touchedLocation,setTouchedLocation] = useState(false)\r\n    const [touchedImage,setTouchedImage] = useState(false)\r\n \r\n    const placeAdd = useSelector(state => state.placeAdd)\r\n    const {loading: loadingAdd,error: errorAdd, success: successAdd} = placeAdd\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(successAdd){\r\n            dispatch({type:PLACE_CREATE_RESET})\r\n            history.push('/')\r\n        }\r\n    },[dispatch,successAdd])\r\n\r\n   const submitHandler = (e) => {\r\n       e.preventDefault()\r\n        const campgroundDetails = {\r\n            title,\r\n            price,\r\n            description,\r\n            location,\r\n            image\r\n        }\r\n        dispatch(addPlace(campgroundDetails))\r\n   }\r\n   \r\n   function validate() {\r\n        const errors = {\r\n            title: '',\r\n            price: '',\r\n            location: '',\r\n            image: '',\r\n            desc: ''\r\n        };\r\n\r\n        if (touchedTitle && title.length < 3)\r\n            errors.title = 'Title should be >= 3 characters';\r\n        \r\n        const reg = /^\\d+$/;\r\n        if (touchedPrice && !reg.test(price))\r\n            errors.price = 'Price should contain only numbers';\r\n        if(touchedPrice && price<0)\r\n            errors.price = 'Price should be greater than zero';\r\n        \r\n        if(touchedLocation && location.length<3){\r\n            errors.location = 'Location should be >= 3 characters'\r\n        }\r\n\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n    '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n        \r\n        if(touchedImage && !pattern.test(image)){\r\n            errors.image = 'Not a valid URL'\r\n        }\r\n\r\n        if(touchedDescription && description.length<=0)\r\n            errors.desc = 'No Description'\r\n\r\n        return errors;\r\n    }\r\n    \r\n    const errors = validate(title);\r\n    return (\r\n        <Zoom bottom>\r\n            <Link to='/' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>New Campground</h1>\r\n            {loadingAdd ? <Loader /> : null}\r\n            {errorAdd ? <Message variant='danger'>{errorAdd}</Message> : null}\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\"\r\n                            placeholder=\"Campground title\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)} \r\n                            onBlur = {() => setTouchedTitle(true)}\r\n                            valid={ errors.title==='' && title.length>=3}\r\n                            invalid={errors.title !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.title}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"price\">Price</Label>\r\n                        <Input type=\"text\" id=\"price\" name=\"price\"\r\n                            placeholder=\"Campground price\"\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)} \r\n                            onBlur = {() => setTouchedPrice(true)}\r\n                            valid={errors.price === '' && parseInt(price)}\r\n                            invalid={errors.price !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.price}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"location\">Location</Label>\r\n                        <Input type=\"text\" id=\"location\" name=\"location\"\r\n                            placeholder=\"Campground location\"\r\n                            value={location}\r\n                            onChange={(e) => setLocation(e.target.value)} \r\n                            onBlur = {() => setTouchedLocation(true)}\r\n                            valid={errors.location === '' && location.length>=3}\r\n                            invalid={errors.location !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.location}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"image\">Image</Label>\r\n                        <Input type=\"text\" id=\"image\" name=\"image\"\r\n                            placeholder=\"Campground image\"\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)} \r\n                            onBlur = {() => setTouchedImage(true)}\r\n                            valid={errors.image === '' && image}\r\n                            invalid={errors.image !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.image}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='desc' id='desc'>Description</Label>\r\n                    <Input \r\n                        type='textarea' \r\n                        name='desc' \r\n                        id='desc' \r\n                        placeholder=\"Campground description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        onBlur = {() => setTouchedDescription(true)}\r\n                        valid={errors.desc === '' && description}\r\n                        invalid={errors.desc !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.desc}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <Button  \r\n                    block \r\n                    type=\"submit\" \r\n                    color=\"primary\"\r\n                    disabled = {errors.title || errors.price || errors.location\r\n                        || errors.image || errors.desc || !title || !image || !price || !location || !description}\r\n                >\r\n                    Add new campground\r\n                </Button>\r\n            </Form>\r\n\r\n            </FormContainer>\r\n            \r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default AddNewCampground\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\components\\FormContainer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\EditCampgroundDetails.js",["101","102"],"import React,{useState,useEffect} from 'react'\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Button } from 'react-bootstrap';\r\nimport { Form, FormGroup, Label, Input,FormFeedback} from 'reactstrap';\r\nimport Zoom from 'react-reveal/Zoom';\r\nimport Message from '../components/Message'\r\nimport {editPlace} from '../actions/campgroundActions'\r\nimport {PLACE_EDIT_RESET,} from '../constants/campgroundConstants'\r\nimport Loader from '../components/Loader'\r\n\r\nconst EditCampgroundDetails = ({history,match}) => {\r\n    const placeId = match.params.id\r\n\r\n    const placeDetail = useSelector(state => state.placeDetail)\r\n    const {loading,place,error} = placeDetail\r\n    const dispatch = useDispatch()\r\n\r\n    const placeEdit = useSelector(state => state.placeEdit)\r\n    const {loading:loadingEdit,success:successEdit,error:errorEdit} = placeEdit\r\n\r\n    const [title,setTitle] = useState('')\r\n    const [price,setPrice] = useState();\r\n    const [description,setDescription] = useState('')\r\n    const [location,setLocation] = useState('')\r\n    const [image,setImage] = useState('')\r\n\r\n    const [touchedTitle,setTouchedTitle] = useState(false)\r\n    const [touchedPrice,setTouchedPrice] = useState(false);\r\n    const [touchedDescription,setTouchedDescription] = useState(false)\r\n    const [touchedLocation,setTouchedLocation] = useState(false)\r\n    const [touchedImage,setTouchedImage] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        if(!place.title){\r\n            history.push(`/campground/${placeId}`)\r\n        }\r\n        if(successEdit){\r\n            dispatch({type: PLACE_EDIT_RESET,})\r\n            history.push(`/campground/${placeId}`)\r\n        }\r\n        setTitle(place.title)\r\n        setImage(place.image)\r\n        setDescription(place.description)\r\n        setPrice(place.price)\r\n        setLocation(place.location)\r\n    },[dispatch,match,history,placeId,place,successEdit])\r\n\r\n    function validate() {\r\n        const errors = {\r\n            title: '',\r\n            price: '',\r\n            location: '',\r\n            image: '',\r\n            desc: ''\r\n        };\r\n\r\n        if (touchedTitle && title.length < 3)\r\n            errors.title = 'Title should be >= 3 characters';\r\n        \r\n        const reg = /^\\d+$/;\r\n        if (touchedPrice && !reg.test(price))\r\n            errors.price = 'Price should contain only numbers';\r\n        if(touchedPrice && price<0)\r\n            errors.price = 'Price should be greater than zero';\r\n        \r\n        if(touchedLocation && location.length<3){\r\n            errors.location = 'Location should be >= 3 characters'\r\n        }\r\n\r\n        var pattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // protocol\r\n    '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // domain name\r\n    '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // OR ip (v4) address\r\n    '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // port and path\r\n    '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // query string\r\n    '(\\\\#[-a-z\\\\d_]*)?$','i'); // fragment locator\r\n        \r\n        if(touchedImage && !pattern.test(image)){\r\n            errors.image = 'Not a valid URL'\r\n        }\r\n\r\n        if(touchedDescription && description.length<=0)\r\n            errors.desc = 'No Description'\r\n\r\n        return errors;\r\n    }\r\n    \r\n    const errors = validate(title);\r\n\r\n    const submitHandler = (e) => {\r\n       e.preventDefault()\r\n        const campgroundDetails = {\r\n            title,\r\n            price,\r\n            description,\r\n            location,\r\n            image,\r\n            \r\n        }\r\n      dispatch(editPlace(campgroundDetails,placeId))\r\n   }\r\n\r\n    return (\r\n        <Zoom bottom>\r\n            <Link to={`/campground/${placeId}`} className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n            <h1>Edit Campground</h1>\r\n            {loadingEdit ? <Loader /> : errorEdit ? <Message variant='danger'>{errorEdit}</Message> : null}\r\n            <Form onSubmit={submitHandler}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" name=\"title\"\r\n                            placeholder=\"Campground title\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)} \r\n                            onBlur = {() => setTouchedTitle(true)}\r\n                            valid={ errors.title==='' && title.length>=3}\r\n                            invalid={errors.title !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.title}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"price\">Price</Label>\r\n                        <Input type=\"text\" id=\"price\" name=\"price\"\r\n                            placeholder=\"Campground price\"\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)} \r\n                            onBlur = {() => setTouchedPrice(true)}\r\n                            valid={errors.price === '' && parseInt(price)}\r\n                            invalid={errors.price !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.price}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"location\">Location</Label>\r\n                        <Input type=\"text\" id=\"location\" name=\"location\"\r\n                            placeholder=\"Campground location\"\r\n                            value={location}\r\n                            onChange={(e) => setLocation(e.target.value)} \r\n                            onBlur = {() => setTouchedLocation(true)}\r\n                            valid={errors.location === '' && location.length>=3}\r\n                            invalid={errors.location !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.location}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor=\"image\">Image</Label>\r\n                        <Input type=\"text\" id=\"image\" name=\"image\"\r\n                            placeholder=\"Campground image\"\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)} \r\n                            onBlur = {() => setTouchedImage(true)}\r\n                            valid={errors.image === '' && image}\r\n                            invalid={errors.image !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.image}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label htmlFor='desc' id='desc'>Description</Label>\r\n                    <Input \r\n                        type='textarea' \r\n                        name='desc' \r\n                        id='desc' \r\n                        placeholder=\"Campground description\"\r\n                        value={description}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        onBlur = {() => setTouchedDescription(true)}\r\n                        valid={errors.desc === '' && description}\r\n                        invalid={errors.desc !== ''}\r\n                        />\r\n                        <FormFeedback>{errors.desc}</FormFeedback>\r\n                </FormGroup>\r\n\r\n                <Button  \r\n                    block \r\n                    type=\"submit\" \r\n                    color=\"primary\"\r\n                    disabled = {errors.title || errors.price || errors.location\r\n                        || errors.image || errors.desc || !title || !image || !price || !location || !description}\r\n                >\r\n                    Edit campground\r\n                </Button>\r\n            </Form>\r\n\r\n            </FormContainer>\r\n            \r\n        </Zoom>\r\n    )\r\n}\r\n\r\nexport default EditCampgroundDetails\r\n","D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignUpScreen.js",["103"],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\screens\\SignInScreen.js",["104"],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\constants\\userConstants.js",[],"D:\\Web Dev\\Projects\\TrekNTravel\\frontend\\src\\actions\\userActions.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":5,"column":22,"nodeType":"111","messageId":"112","endLine":5,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":23,"column":5,"nodeType":"115","endLine":23,"endColumn":7,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":2,"column":9,"nodeType":"111","messageId":"112","endLine":2,"endColumn":14},{"ruleId":"109","severity":1,"message":"118","line":14,"column":10,"nodeType":"111","messageId":"112","endLine":14,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":18,"column":5,"nodeType":"115","endLine":18,"endColumn":20,"suggestions":"119"},{"ruleId":"109","severity":1,"message":"120","line":18,"column":44,"nodeType":"111","messageId":"112","endLine":18,"endColumn":55},{"ruleId":"113","severity":1,"message":"121","line":34,"column":7,"nodeType":"115","endLine":34,"endColumn":23,"suggestions":"122"},{"ruleId":"113","severity":1,"message":"123","line":36,"column":7,"nodeType":"115","endLine":36,"endColumn":28,"suggestions":"124"},{"ruleId":"109","severity":1,"message":"118","line":17,"column":12,"nodeType":"111","messageId":"112","endLine":17,"endColumn":19},{"ruleId":"109","severity":1,"message":"125","line":17,"column":26,"nodeType":"111","messageId":"112","endLine":17,"endColumn":31},{"ruleId":"113","severity":1,"message":"126","line":38,"column":7,"nodeType":"115","endLine":38,"endColumn":53,"suggestions":"127"},{"ruleId":"113","severity":1,"message":"126","line":39,"column":7,"nodeType":"115","endLine":39,"endColumn":53,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'Route' is defined but never used.","'loading' is assigned a value but never used.",["132"],"'editedPlace' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'editedPlace'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["134"],"'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userStatus'. Either include them or remove the dependency array.",["135"],["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"145","fix":"147"},"Update the dependencies array to be: [dispatch]",{"range":"148","text":"149"},"Update the dependencies array to be: [success, error, dispatch]",{"range":"150","text":"151"},"Update the dependencies array to be: [match, dispatch, editedPlace]",{"range":"152","text":"153"},"Update the dependencies array to be: [dispatch, history, successAdd]",{"range":"154","text":"155"},"Update the dependencies array to be: [success, history, redirect, userInfo, isLoggedIn, userStatus, dispatch]",{"range":"156","text":"157"},{"range":"158","text":"157"},[786,788],"[dispatch]",[627,642],"[success, error, dispatch]",[1256,1272],"[match, dispatch, editedPlace]",[1490,1511],"[dispatch, history, successAdd]",[1421,1467],"[success, history, redirect, userInfo, isLoggedIn, userStatus, dispatch]",[1486,1532]]